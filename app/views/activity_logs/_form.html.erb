<%= form_with model: @activity_log, url: activity_logs_path, method: :post do |form| %>
  <%= form.label :activity_id, "Activity Type" %>
  <%= form.select :activity_id, 
                 Activity.pluck(:title, :id, :is_duration_based).map { |title, id, is_duration_based| [title, id, { 'data-is-duration-based': is_duration_based }] },
                 { prompt: 'Select activity' },
                 { id: "activity-select", required: true, autofocus: true, tabindex: '1' } %>

  <div id="duration-field" style="display: none;">
    <%= form.label :duration, "Duration (minutes)" %>
    <%= form.number_field :duration, min: 0, step: 1, tabindex: '2' %>
  </div>

  <div id="reps-field" style="display: none;">
    <%= form.label :repetitions, "Number of Reps" %>
    <%= form.number_field :repetitions, min: 0, step: 1, tabindex: '3' %>
  </div>

  <%= form.label :date %>
  <%= form.date_field :date, required: true, tabindex: '4' %>

  <%= form.label :notes %>
  <%= form.text_field :notes, tabindex: '5' %>
  
  <%= form.submit "Post Activity", tabindex: '6' %>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const activitySelect = document.getElementById('activity-select');
    const durationField = document.getElementById('duration-field');
    const repsField = document.getElementById('reps-field');
    const dateField = document.querySelector('input[type="date"]');
    const notesField = document.querySelector('input[name="activity_log[notes]"]');
    const submitButton = document.querySelector('input[type="submit"]');

    activitySelect.addEventListener('change', function() {
      const selectedOption = activitySelect.options[activitySelect.selectedIndex];
      const isDurationBased = selectedOption.getAttribute('data-is-duration-based');
      if (isDurationBased === 'true') {
        durationField.style.display = 'block';
        repsField.style.display = 'none';
        durationField.querySelector('input').focus();
      } else if (isDurationBased === 'false') {
        durationField.style.display = 'none';
        repsField.style.display = 'block';
        repsField.querySelector('input').focus();
      }
    });

    activitySelect.addEventListener('keydown', function(e) {
      if (e.key === 'Tab' && activitySelect.value !== '') {
        const isDurationBased = activitySelect.options[activitySelect.selectedIndex].getAttribute('data-is-duration-based');
        if (isDurationBased === 'true') {
          durationField.style.display = 'block';
          repsField.style.display = 'none';
          durationField.querySelector('input').focus();
        } else if (isDurationBased === 'false') {
          durationField.style.display = 'none';
          repsField.style.display = 'block';
          repsField.querySelector('input').focus();
        }
      }
    });

    durationField.querySelector('input').addEventListener('keydown', function(e) {
      if (e.key === 'Tab' && durationField.querySelector('input').value !== '') {
        repsField.style.display = 'block';
        repsField.querySelector('input').focus();
      }
    });

    repsField.querySelector('input').addEventListener('keydown', function(e) {
      if (e.key === 'Tab' && repsField.querySelector('input').value !== '') {
        dateField.focus();
      }
    });

    dateField.addEventListener('keydown', function(e) {
      if (e.key === 'Tab') {
        notesField.focus();
      }
    });

    notesField.addEventListener('keydown', function(e) {
      if (e.key === 'Tab') {
        submitButton.focus();
      }
    });
  });
</script>
